name: Ingest CSV → Build Data

on:
  workflow_dispatch:
  push:
    paths:
      - "data/sources/*.csv"
      - "scripts/**"
      - "data/schema/**"
      - "assets/**"

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-data:
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: ${{ github.workspace }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Ensure scripts is a package
        run: |
          touch scripts/__init__.py
          touch scripts/ingest/__init__.py
          touch scripts/utils/__init__.py
          touch scripts/qa/__init__.py
          touch scripts/media/__init__.py

      - name: CSV → tools.json
        run: python -m scripts.ingest.csv_to_tools

      # (Removed hydrate step to avoid Google API usage/cost)

      - name: Sanitize hours after enrich (remove empty weekly)
        run: |
          python - << 'PY'
          import json
          p="data/tools.json"
          with open(p, encoding="utf-8") as f:
              data = json.load(f)
          changed = 0
          for obj in data:
            h = obj.get("hours")
            if isinstance(h, dict) and isinstance(h.get("weekly"), dict) and not h["weekly"]:
              obj.pop("hours", None)
              changed += 1
          with open(p, "w", encoding="utf-8") as f:
              json.dump(data, f, ensure_ascii=False, indent=2)
          print(f"Sanitized entries: {changed}")
          PY

      - name: Verify data/tools.json presence & category counts
        run: |
          ls -la data || true
          python - << 'PY'
          import json, collections
          d=json.load(open("data/tools.json",encoding="utf-8"))
          print("TOTAL RECORDS:", len(d))
          counts=collections.Counter()
          for o in d:
            for c in (o.get("categories") or []):
              counts[c]+=1
          print("CATEGORY COUNTS:", dict(counts))
          print("FIRST 5 SLUGS:", [o.get("slug") for o in d[:5]])
          PY

      - name: Validate schema (blocking if present)
        run: |
          if [ -f data/schema/tools.schema.json ]; then
            python -m scripts.qa.validate_schema data/tools.json data/schema/tools.schema.json
          else
            echo "No schema file; skipping"
          fi

      - name: Commit data artifacts
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add data/tools.json assets/images || true
          git diff --staged --quiet || git commit -m "data: update tools + images"
          git push

      # ---- Deploy to GitHub Pages ----
      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Upload site artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
