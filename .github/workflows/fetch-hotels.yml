name: Fetch Hotels from Google

on:
  workflow_dispatch:
    inputs:
      keywords:
        description: "Comma-separated search keywords"
        type: string
        default: "hotel,resort,guest house,aparthotel,boutique hotel,hostel,camp"
      centers:
        description: 'Semicolon-separated "lat,lng" points'
        type: string
        default: "23.611,58.471;23.585,58.407;23.620,58.280;23.600,58.545;23.560,58.640;23.570,58.420;23.520,58.385;23.640,58.520"
      radius:
        description: "Search radius (meters)"
        type: number
        default: 8000
      basic_only:
        description: "Cheapest: only core detail fields (no hours/editorial)"
        type: boolean
        default: true
      max_pages_per_query:
        description: "Max pages per (keyword,center)"
        type: number
        default: 2
      max_places:
        description: "Stop after N unique places overall"
        type: number
        default: 150
      details_throttle_sec:
        description: "Sleep seconds between Details calls"
        type: number
        default: 0.2
      wall_timeout_sec:
        description: "Abort run after this many seconds"
        type: number
        default: 1200
      no_favicons:
        description: "Do NOT set favicon URLs in logo_url"
        type: boolean
        default: false
  # schedule:
  #   - cron: "0 3 * * 1"  # (optional) every Monday 03:00 UTC

permissions:
  contents: write

jobs:
  fetch-hotels:
    runs-on: ubuntu-latest
    env:
      GOOGLE_MAPS_API_KEY: ${{ secrets.GOOGLE_MAPS_API_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Ensure folders exist
        run: |
          mkdir -p data/sources
          mkdir -p assets/hotels

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; else pip install requests; fi

      - name: Run fetcher (image-free, low-cost)
        working-directory: scripts
        run: |
          ARGS=()
          ARGS+=(--keywords "${{ github.event.inputs.keywords }}")
          ARGS+=(--centers "${{ github.event.inputs.centers }}")
          ARGS+=(--radius "${{ github.event.inputs.radius }}")
          ARGS+=(--max-pages-per-query "${{ github.event.inputs.max_pages_per_query }}")
          ARGS+=(--max-places "${{ github.event.inputs.max_places }}")
          ARGS+=(--details-throttle-sec "${{ github.event.inputs.details_throttle_sec }}")
          ARGS+=(--wall-timeout-sec "${{ github.event.inputs.wall_timeout_sec }}")

          # Booleans
          if [ "${{ github.event.inputs.basic_only }}" = "true" ]; then
            ARGS+=(--basic-only)
          fi
          if [ "${{ github.event.inputs.no_favicons }}" = "true" ]; then
            ARGS+=(--no-favicons)
          fi

          echo "Running: python fetch_hotels.py ${ARGS[*]}"
          python fetch_hotels.py "${ARGS[@]}"

      # Make 'scripts' a proper Python package so imports work
      - name: Ensure Python packages
        run: |
          mkdir -p scripts/utils
          touch scripts/__init__.py
          touch scripts/utils/__init__.py

      # Ingest: run as a module from repo root with PYTHONPATH set
      - name: Build tools.json from CSV
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          python -m scripts.ingest.csv_to_tools

      - name: Commit & push changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Fetch hotels (image-free) & rebuild tools.json"
          branch: ${{ github.ref_name }}
          file_pattern: |
            data/sources/hotels.csv
            data/tools.json
